{"version":3,"file":"Header.stories-0a0c85c1.js","sources":["../../src/assets/icons/home-icon.svg","../../src/components/ErrorBoundary.tsx","../../src/components/AwaitRecoilState.tsx","../../src/components/Header.tsx"],"sourcesContent":["export default \"__VITE_ASSET__2ceed860__\"","import type { PropsWithChildren } from 'react';\nimport React from 'react';\n\ntype ErrorBoundaryState = {\n  hasError: boolean;\n};\n\ntype ErrorBoundaryProps = PropsWithChildren<{\n  fallback?: React.ReactNode;\n}>;\n\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  override render() {\n    const { fallback, children } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return fallback;\n    }\n\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { Suspense } from 'react';\nimport type { RecoilState } from 'recoil';\nimport { useRecoilValue } from 'recoil';\nimport ErrorBoundary from './ErrorBoundary';\n\ntype AwaitRecoilStateLoaderProps<T> = {\n  state: RecoilState<T>;\n  children: (data: T) => React.ReactElement;\n};\n\nconst AwaitRecoilStateLoader = <T,>(props: AwaitRecoilStateLoaderProps<T>) => {\n  const { state, children } = props;\n  const unwrapedState = useRecoilValue(state);\n\n  return children(unwrapedState);\n};\n\ntype AwaitRecoilStateProps<T> = {\n  loadingElement?: React.ReactNode;\n  errorElement?: React.ReactNode;\n  state: RecoilState<T>;\n  children: (data: T) => React.ReactElement;\n};\n\nconst AwaitRecoilState = <T,>(props: AwaitRecoilStateProps<T>) => {\n  const { errorElement, loadingElement, state, children } = props;\n\n  return (\n    <ErrorBoundary fallback={errorElement}>\n      <Suspense fallback={loadingElement}>\n        <AwaitRecoilStateLoader state={state}>{children}</AwaitRecoilStateLoader>\n      </Suspense>\n    </ErrorBoundary>\n  );\n};\n\nexport default AwaitRecoilState;\n","import { styled } from 'styled-components';\nimport HomeIcon from '../assets/icons/home-icon.svg';\nimport cartItemsState from '../recoil/atoms/cartItemsState';\nimport AwaitRecoilState from './AwaitRecoilState';\nimport Badge from './Badge';\n\nconst HeaderContainer = styled.header`\n  width: 100%;\n  height: 80px;\n\n  background: #333;\n  color: white;\n`;\n\nconst HeaderContent = styled.div`\n  display: flex;\n  align-items: stretch;\n  justify-content: space-between;\n\n  margin: 0 auto;\n  padding: 0 24px;\n\n  height: 100%;\n  max-width: 1300px;\n`;\n\nconst HomeButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  color: inherit;\n`;\n\nconst HomeButtonText = styled.h1`\n  font-size: 40px;\n  font-weight: 900;\n`;\n\nconst Menu = styled.nav`\n  display: flex;\n  gap: 24px;\n\n  padding: 4px 24px;\n`;\n\nconst MenuButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  font-size: 24px;\n  font-weight: 500;\n`;\n\ntype HeaderProps = {\n  onNavigate: (to: string) => void;\n};\n\nconst Header = (props: HeaderProps) => {\n  const { onNavigate } = props;\n\n  return (\n    <HeaderContainer>\n      <HeaderContent>\n        <HomeButton onClick={() => onNavigate('/')}>\n          <img alt=\"홈\" src={HomeIcon} width={44} />\n          <HomeButtonText>SHOP</HomeButtonText>\n        </HomeButton>\n\n        <Menu>\n          <MenuButton onClick={() => onNavigate('/cart')}>\n            장바구니{' '}\n            <AwaitRecoilState state={cartItemsState}>\n              {(cartItems) => <Badge show={cartItems.length > 0}>{cartItems.length}</Badge>}\n            </AwaitRecoilState>\n          </MenuButton>\n        </Menu>\n      </HeaderContent>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n"],"names":["HomeIcon","ErrorBoundary","React","props","fallback","children","hasError","AwaitRecoilStateLoader","state","unwrapedState","useRecoilValue","AwaitRecoilState","errorElement","loadingElement","jsx","Suspense","HeaderContainer","styled","HeaderContent","HomeButton","HomeButtonText","Menu","MenuButton","Header","onNavigate","jsxs","cartItemsState","cartItems","Badge"],"mappings":"yTAAA,MAAeA,EAAA,GAAA,IAAA,IAAA,yBAAA,YAAA,GAAA,EAAA,KCWf,MAAAC,UAAAC,EAAA,SAAA,CAAoF,YAAAC,EAAA,CAEhF,MAAAA,CAAA,EACA,KAAA,MAAA,CAAA,SAAA,EAAA,CAA+B,CACjC,OAAA,0BAAA,CAGE,MAAA,CAAA,SAAA,GAAwB,CAC1B,QAAA,CAGE,KAAA,CAAA,SAAAC,EAAA,SAAAC,GAAA,KAAA,MACA,CAAA,SAAAC,CAAA,EAAA,KAAA,MAEA,OAAAA,EACEF,EAGFC,CAAO,CAEX,8MCrBA,MAAAE,EAAAJ,GAAA,CACE,KAAA,CAAA,MAAAK,EAAA,SAAAH,CAAA,EAAAF,EACAM,EAAAC,EAAAF,CAAA,EAEA,OAAAH,EAAAI,CAAA,CACF,EASAE,EAAAR,GAAA,CACE,KAAA,CAAA,aAAAS,EAAA,eAAAC,EAAA,MAAAL,EAAA,SAAAH,CAAA,EAAAF,EAEA,OAAAW,EAAA,IAAAb,EAAA,CAAA,SAAAW,EAAA,SAAAE,EAAAA,IAAAC,EAAAA,SAAA,CAAA,SAAAF,EAAA,SAAAC,EAAA,IAAAP,EAAA,CAAA,MAAAC,EAAA,SAAAH,CAAA,CAAA,EAAA,CAAA,CAAA,CAOF,waC5BA,MAAAW,EAAAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQAC,EAAAD,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYAE,EAAAF,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQAG,EAAAH,EAAA;AAAA;AAAA;AAAA,EAKAI,EAAAJ,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOAK,EAAAL,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaAM,EAAApB,GAAA,CACE,KAAA,CAAA,WAAAqB,CAAA,EAAArB,EAEA,OAAAW,EAAAA,IAAAE,EAAA,CAAA,SAAAS,EAAAA,KAAAP,EAAA,CAAA,SAAA,CAGMO,EAAA,KAAAN,EAAA,CAAA,QAAA,IAAAK,EAAA,GAAA,EAAA,SAAA,CACEV,MAAA,MAAA,CAAA,IAAA,IAAA,IAAAd,EAAA,MAAA,GAAA,EAAuCc,EAAAA,IAAAM,EAAA,CAAA,SAAA,MAAA,CAAA,CACnB,EAAA,EACtBN,EAAAA,IAAAO,EAAA,CAAA,SAAAI,OAAAH,EAAA,CAAA,QAAA,IAAAE,EAAA,OAAA,EAAA,SAAA,CAGkD,OAAA,IACzCV,EAAA,IAAAH,EAAA,CAAA,MAAAe,EAAA,SAAAC,GAAAb,MAAAc,EAAA,CAAA,KAAAD,EAAA,OAAA,EAAA,SAAAA,EAAA,MAAA,CAAA,EAAA,CAGL,CAAA,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CAAA,CAIR"}