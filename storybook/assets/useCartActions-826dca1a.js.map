{"version":3,"file":"useCartActions-826dca1a.js","sources":["../../src/utils/Future.ts","../../src/hooks/useMutation.ts","../../src/hooks/useCartMutations.ts","../../src/hooks/useCartActions.ts"],"sourcesContent":["const NotExists = Symbol('NotExists');\n\nclass Future<TData, TError = Error> {\n  private promise: Promise<TData>;\n\n  private data: typeof NotExists | TData = NotExists;\n\n  private error: typeof NotExists | TError = NotExists;\n\n  constructor(private readonly fn: () => Promise<TData>) {\n    this.promise = this.fn();\n    this.promise\n      .then((data) => {\n        this.data = data;\n      })\n      .catch((error) => {\n        this.error = error;\n        console.error(error);\n      });\n  }\n\n  toPromise(): Promise<TData> {\n    return this.promise;\n  }\n\n  unwrap(): TData {\n    if (this.error !== NotExists) throw this.error;\n\n    if (this.data === NotExists) throw this.promise;\n\n    return this.data;\n  }\n}\n\nexport default Future;\n","import { useState } from 'react';\nimport Future from '../utils/Future';\n\ntype UseMutationReturn<TParams extends unknown[], TData, TError> = {\n  future: Future<TData, TError> | null;\n  mutate: (...args: TParams) => Promise<TData>;\n};\n\nconst useMutation = <TParams extends unknown[], TData, TError = Error>(\n  mutationFn: (...args: TParams) => Promise<TData>,\n): UseMutationReturn<TParams, TData, TError> => {\n  const [future, setFuture] = useState<Future<TData, TError> | null>(null);\n  const mutate = (...args: TParams): Promise<TData> => {\n    const future = new Future<TData, TError>(() => mutationFn(...args));\n    setFuture(future);\n    return future.toPromise();\n  };\n\n  return {\n    future,\n    mutate,\n  };\n};\n\nexport default useMutation;\n","import { client, path } from '../api';\nimport type { CartItem, Product } from '../type';\nimport useMutation from './useMutation';\n\nconst useCartMutations = () => {\n  const createCartItem = useMutation(async (productId: Product['id']) => {\n    const response = await client.post('/cart-items', { productId }).acceptOrThrow(201);\n    const cartItemId = Number(\n      String(response.headers.location)\n        .match(/(\\d+)$/)\n        ?.at(0),\n    );\n    return cartItemId;\n  });\n\n  const updateCartItemQuantity = useMutation(\n    async (cartItemId: CartItem['id'], quantity: number) => {\n      await client\n        .patch(path('/cart-items/:cartItemId', cartItemId), { quantity })\n        .acceptOrThrow(200);\n    },\n  );\n\n  const deleteCartItem = useMutation(async (cartItemId: CartItem['id']) => {\n    await client.delete(path('/cart-items/:cartItemId', cartItemId)).acceptOrThrow(204);\n  });\n\n  return { createCartItem, updateCartItemQuantity, deleteCartItem };\n};\n\nexport default useCartMutations;\n","import { useCallback } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { client, path } from '../api';\nimport cartItemsState from '../recoil/atoms/cartItemsState';\nimport type { CartItem, Product } from '../type';\nimport useCartMutations from './useCartMutations';\nimport useMutation from './useMutation';\n\nconst useCartActions = () => {\n  const [cartItems, setCartItems] = useRecoilState(cartItemsState);\n  const { createCartItem, updateCartItemQuantity, deleteCartItem } = useCartMutations();\n\n  const findCartItemByProductId = useCallback(\n    (productId: Product['id']) =>\n      cartItems.find((cartItem) => cartItem.product.id === productId) ?? null,\n    [cartItems],\n  );\n\n  const setQuantity = useCallback(\n    async (product: Product, quantity: number) => {\n      const cartItem = findCartItemByProductId(product.id);\n\n      if (quantity <= 0) {\n        if (cartItem) deleteCartItem.mutate(cartItem.id);\n\n        setCartItems((cartItems) =>\n          cartItems.filter((cartItem) => cartItem.product.id !== product.id),\n        );\n        return;\n      }\n\n      if (cartItem) {\n        updateCartItemQuantity.mutate(cartItem.id, quantity);\n        setCartItems(cartItems.map((it) => (it.id === cartItem.id ? { ...it, quantity } : it)));\n        return;\n      }\n\n      const cartItemId = await createCartItem.mutate(product.id);\n      setCartItems([\n        ...cartItems,\n        { id: cartItemId, product, quantity, unselectedForOrder: false },\n      ]);\n    },\n    [\n      cartItems,\n      setCartItems,\n      findCartItemByProductId,\n      createCartItem,\n      updateCartItemQuantity,\n      deleteCartItem,\n    ],\n  );\n\n  const { mutate: deleteCartItems } = useMutation(async (cartItemIds: Array<CartItem['id']>) => {\n    setCartItems((cartItems) => cartItems.filter((cartItem) => !cartItemIds.includes(cartItem.id)));\n\n    await Promise.all(\n      cartItemIds.map((cartItemId) =>\n        client.delete(path('/cart-items/:cartItemId', cartItemId)).acceptOrThrow(204),\n      ),\n    );\n  });\n\n  return { cartItems, findCartItemByProductId, setQuantity, deleteCartItems };\n};\n\nexport default useCartActions;\n"],"names":["NotExists","Future","fn","data","error","useMutation","mutationFn","future","setFuture","useState","args","useCartMutations","createCartItem","productId","response","client","_a","updateCartItemQuantity","cartItemId","quantity","path","deleteCartItem","useCartActions","cartItems","setCartItems","useRecoilState","cartItemsState","findCartItemByProductId","useCallback","cartItem","setQuantity","product","it","deleteCartItems","cartItemIds"],"mappings":"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"}